# 📚 **Book Store Application** (MERN Stack)

![Book Store Banner](https://via.placeholder.com/1000x400.png?text=Book+Store+Project)  
*An interactive and responsive online bookstore built using the MERN stack.*

---

## 🌟 **Features**

- **Book Management**: Effortlessly add, edit, and delete books.
- **User Authentication**: Secure signup, login, and logout functionalities.
- **Browse and Search**: Find books by categories, authors, or titles with ease.
- **Free Book Access**: Dedicated section for free books.
- **Courses**: Enroll in and explore book-related courses.
- **Responsive UI**: Mobile-first design, fully responsive across all devices.

---

## 🛠️ **Technologies Used**

- **Frontend**: React.js, Vite.js, Tailwind CSS
- **Backend**: Node.js, Express.js
- **Database**: MongoDB
- **Build Tool**: Vite.js for fast development and hot module replacement (HMR)

---

## 📦 **Dependencies**

### Backend:
- `express`: Minimalist web framework for Node.js.
- `mongoose`: MongoDB object modeling tool for asynchronous environments.
- `jsonwebtoken`: Secure authentication using JWT tokens.
- `dotenv`: Loads environment variables from a `.env` file.
- `bcryptjs`: Password hashing.

### Frontend:
- `react`: JavaScript library for building user interfaces.
- `react-router-dom`: Routing library for handling navigation.
- `axios`: Promise-based HTTP client for the browser and Node.js.
- `tailwindcss`: Utility-first CSS framework for rapid UI development.
- `vite`: Fast development server and build tool.

---

## 🗂 **Project Structure**

### Backend (Node.js + Express)

Book-Store/
├── controller/ # Backend logic and request handling
├── model/ # MongoDB schemas and models
├── route/ # API routes for books, users, etc.
├── .env # Environment variables
├── index.js # Main backend entry point
└── package.json # Backend dependencies and scripts

### Frontend (React + Vite)
Book-Store/frontend/
├── assets/ # Static assets like images
├── components/ # Reusable UI components (Navbar, Footer, etc.)
│ ├── Banner.jsx # Banner for the homepage
│ ├── Cards.jsx # Book cards with hover effects
│ ├── Login.jsx # Login form component
│ └── Signup.jsx # Signup form component
├── context/ # Global state management
├── App.jsx # Main app component
├── index.css # Global styling
├── vite.config.js # Vite configuration for faster builds
└── package.json # Frontend dependencies and scripts

---

## 🚀 **Getting Started**

### 1. **Backend Setup**

1. **Clone the repository** and navigate to the backend folder:
   ```bash
   git clone https://github.com/Sandy1114D/Book-Store.git
   cd Book-Store/backend
Install dependencies:
npm install
Configure environment variables:
Create a .env file in the root of the backend folder with the following:MONGO_URI=<Your MongoDB Connection String>
JWT_SECRET=<Your Secret Key>
Run the backend server:npm start
 Frontend Setup
Navigate to the frontend folder:cd ../frontend
Install frontend dependencies:npm install
Start the frontend development server:npm run dev
Access the application at http://localhost:3000.
🌍 API Endpoints (Backend)
GET /books: Retrieve all books.
POST /books: Add a new book.
PUT /books/
: Update a book by ID.
DELETE /books/
: Delete a book by ID.
POST /users/signup: User signup.
POST /users/login: User login.
📸 Screenshots
Homepage

The homepage showcases featured books and quick access to login/signup.

Books Listing

Books are listed with search and filtering options.

Book Details

Detailed view of a book with its description and author information.

🔧 Contributing
Contributions are welcome! Feel free to open an issue or submit a pull request for improvements or new features.

📜 License
This project is licensed under the MIT License. See the LICENSE file for details.

Thank you for exploring the Book Store Application! 🎉
Feel free to use this code directly in your `README.md` file. Adjust the screenshot URLs and any other details to match your project's specifics.








